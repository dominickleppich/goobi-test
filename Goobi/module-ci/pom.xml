<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.intranda.goobi.workflow</groupId>
        <artifactId>goobi-core</artifactId>
        <version>23.08.1</version>
        <relativePath>../</relativePath>
    </parent>


    <groupId>de.intranda.goobi.workflow</groupId>
    <artifactId>goobi-core-ci</artifactId>
    <version>23.08.1</version>
    <packaging>jar</packaging>




    <name>Goobi workflow: Run CI tests and checks</name>
    <description>Used to run several automated tests</description>


    <properties>
        <!-- Do not deploy results from CI module to Nexus -->
        <maven.deploy.skip>true</maven.deploy.skip>
        <!-- Run tests in this module -->
        <skipTests>false</skipTests>
        <!-- The basedir from this module is the project basedir. Setting it here
             allows relative URLs afterwards -->
        <basedir>${project.basedir}</basedir>
        <!-- The Sonar basedir is one level up... -->
        <sonar.projectBaseDir>..</sonar.projectBaseDir>
        <!-- Maximum number of Checkstyle validations before the run fails with an error -->
        <checkstyle.max.violations>400</checkstyle.max.violations>
    </properties>


    <build>
        <sourceDirectory>../src/main/java</sourceDirectory>
        <testSourceDirectory>../src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>../src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>../src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>../src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </testResource>
        </testResources>
        <plugins>
            <!-- Jacoco creates Code Coverate report for unit tests
                 See Jenkinsfile for publishing the results in Jenkins and the parent pom.xml
                 for publishing the coverage report in Sonar -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Makes a script executable which would fail otherwise in the unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>process-test-classes</id>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <target>
                                <chmod file="target/test-classes/scripts/script_createDirMeta.sh" perm="755"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Check for known vulnerabilities. See Jenkinsfile for publishing the results in Jenkins -->
            <plugin>
              <groupId>org.owasp</groupId>
              <artifactId>dependency-check-maven</artifactId>
              <version>7.4.4</version>
              <configuration>
              <!--failBuildOnCVSS>8.0</failBuildOnCVSS-->
              <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
              <skipProvidedScope>true</skipProvidedScope>
              <skipTestScope>true</skipTestScope>
              <suppressionFiles>
                  <suppressionFile>${project.basedir}/goobi-suppression.xml</suppressionFile>
                    </suppressionFiles>
                    <format>ALL</format>
                    <ossIndexWarnOnlyOnRemoteErrors>true</ossIndexWarnOnlyOnRemoteErrors>
                    <failOnError>false</failOnError>
                    <ossindexAnalyzerEnabled>false</ossindexAnalyzerEnabled>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M8</version>
                <configuration>
                    <skipTests>${skipTests}</skipTests>
                    <excludes>
                        <exclude>**/*/TestAll.java</exclude>
                    </excludes>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>src/test/resources/log4j2.test.xml</value>
                        </property>
                    </systemProperties>
                    <!-- This line overwrites the Jacoco argLine which results in a missing code coverate report -->
                    <!--argLine>add-exports java.base/jdk.internal.loader=ALL-UNNAMED</argLine-->
                </configuration>
            </plugin>
            <!-- Analyse the code with the given checkstyle configuraton.
                 See Jenkinsfile for publishing the results in Jenkins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.3</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>verify</phase>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <failOnViolation>true</failOnViolation>
                            <failsOnError>false</failsOnError>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <maxAllowedViolations>${checkstyle.max.violations}</maxAllowedViolations>
                            <violationSeverity>warning</violationSeverity>
                            <configLocation>file://${project.basedir}/../checkstyle.xml</configLocation>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Show deprecation information during compilation -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <release>11</release>
                    <compilerArgs>
                        <arg>-Xlint:deprecation</arg>
                        <arg>-Xlint:unchecked</arg>
                        <arg>-Xlint:removal</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Use single version-number-rules.xml for entire project -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <rulesUri>file://${project.basedir}/../version-number-rules.xml</rulesUri>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
